from bs4 import BeautifulSoup
import requests
import pandas as pd
import sqlite3
import json
import gmplot
import RAMESHSELVAM_KIRTHANA_hw5_plot
import sys
import RAMESHSELVAM_KIRTHANA_hw5_localscrape
import RAMESHSELVAM_KIRTHANA_hw5_remotescrape
import argparse

#creating a new commandline argument called -source 
parser = argparse.ArgumentParser()
parser.add_argument("-source", help="specify local/remote",type = str)
args = parser.parse_args()
ip = []
#checking if the commandline argument is remote or local
if args.source == "remote":
#if the argument is remote, then the pages are scraped freshly 
#the functions that perform the scraping operations are imported above and invoked here
	print("Scraping webpages freshly... \n This may take approx. 15 mins due to API Constraints\n")
	ip = RAMESHSELVAM_KIRTHANA_hw5_remotescrape.scrapeIPtype()
	print("Started fetching from the Alien Vault API!")
	RAMESHSELVAM_KIRTHANA_hw5_remotescrape.scrapeDS2(ip)
	RAMESHSELVAM_KIRTHANA_hw5_localscrape.findmaxmaltype()
	RAMESHSELVAM_KIRTHANA_hw5_localscrape.findmaxioc()
	RAMESHSELVAM_KIRTHANA_hw5_localscrape.findmaxcountry()
	RAMESHSELVAM_KIRTHANA_hw5_plot.plotheatmap()
	print("All Done! Please open map.html to see the results!")
elif args.source == "local":
	df = ""
#we initially check if data is there in the SQL database, so that the local mode can be executed
#if not, the local mode does not run- an exception saying that remote mode needs to be run first is displayed
	try:
		conn = sqlite3.connect('projectMal.db')
		query = 'select * from "Malwaredata"'
		df = pd.read_sql(query,conn)
		RAMESHSELVAM_KIRTHANA_hw5_localscrape.findmaxmaltype()
		RAMESHSELVAM_KIRTHANA_hw5_plot.plotheatmap()
		RAMESHSELVAM_KIRTHANA_hw5_localscrape.findmaxioc()
		RAMESHSELVAM_KIRTHANA_hw5_localscrape.findmaxcountry()
		print("\nAll Done! Please open map.html to see the results!")
		
	except:
		print("No data in local source. Please run the program in remote mode first")
	
#if the arguments are not specified properly, this is displayed		
else:
	print("Usage: \n python filename.py -source=local/remote")

		
	
